# Generated by Django 5.2 on 2025-05-04 16:31

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import neutrino.account.Field
import neutrino.account.validator
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image_path', models.ImageField(upload_to='', validators=[neutrino.account.validator.FileValidatoPentrate])),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DefaultUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(choices=[('1', 'mail'), ('0', 'femail')], max_length=1)),
                ('status', models.BooleanField(default=False)),
                ('about', models.TextField(blank=True)),
                ('phone', neutrino.account.Field.PhoneField(max_length=12, unique=True, validators=[neutrino.account.validator.PhoneValidator])),
                ('is_pro_user', models.BooleanField(default=0)),
                ('is_limited', models.BooleanField(default=0)),
                ('read_receipts', models.BooleanField(default=True)),
                ('posts_count', models.PositiveIntegerField(default=0)),
                ('subscriber_count', models.PositiveIntegerField(default=0)),
                ('subscription_count', models.PositiveIntegerField(default=0)),
                ('bio', models.CharField(blank=True, max_length=1000, null=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FOLLOWING', to=settings.AUTH_USER_MODEL)),
                ('forward_connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='FOLLOWER', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='PROFILE', related_query_name='profile', to='account.profile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserNetworkProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ipv4_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4')),
                ('ipv6_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv6')),
                ('last_known_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('isp', models.CharField(blank=True, max_length=100, null=True)),
                ('asn', models.CharField(blank=True, max_length=20, null=True)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('connection_type', models.CharField(blank=True, choices=[('wifi', 'WiFi'), ('mobile', 'Mobile'), ('ethernet', 'Ethernet'), ('other', 'Other')], max_length=20, null=True)),
                ('bandwidth', models.PositiveIntegerField(blank=True, null=True)),
                ('is_vpn', models.BooleanField(default=False)),
                ('is_proxy', models.BooleanField(default=False)),
                ('is_tor', models.BooleanField(default=False)),
                ('first_seen', models.DateTimeField(auto_now_add=True)),
                ('last_seen', models.DateTimeField(auto_now=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=50, null=True)),
                ('json_convert_data', models.JSONField(null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='network_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_visibility', models.CharField(choices=[('public', 'عمومی'), ('friends', 'دوستان'), ('private', 'خصوصی')], default='public', max_length=10, verbose_name='نمایش پروفایل')),
                ('last_seen_visibility', models.CharField(choices=[('public', 'عمومی'), ('friends', 'دوستان'), ('private', 'خصوصی')], default='friends', max_length=10)),
                ('message_notifications', models.CharField(choices=[('all', 'همه'), ('mentions', 'فقط منشن\u200cها'), ('none', 'هیچکدام')], default='all', max_length=10)),
                ('group_notifications', models.CharField(choices=[('all', 'همه'), ('mentions', 'فقط منشن\u200cها'), ('none', 'هیچکدام')], default='all', max_length=10)),
                ('sound_enabled', models.BooleanField(default=True)),
                ('theme', models.CharField(default='light', max_length=20)),
                ('font_size', models.PositiveSmallIntegerField(default=14)),
                ('last_seen_profiles_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='SeenProfile', related_query_name='seenprofiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'setting Account',
                'verbose_name_plural': 'Settings',
            },
        ),
    ]
